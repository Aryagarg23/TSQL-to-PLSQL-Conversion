{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "DROP DATABASE $db", "output": "alter session force parallel dml parallel (degree $degree_of_parallel)"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select top 20 c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= ':1' and o_orderdate < dateadd(mm,3,cast(':1'as datetime)) and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc option (maxdop $maxdop)", "output": "SELECT * FROM ( SELECT p_partkey , Count ( *) ocount FROM lineitem , part WHERE l_partkey = p_partkey AND NOT EXISTS ( SELECT o_orderkey FROM orders WHERE o_orderkey = l_orderkey) AND NOT EXISTS ( SELECT 1 FROM supplier WHERE l_suppkey = s_suppkey) AND l_discount < 1.1 AND p_size < 45 GROUP BY p_partkey ORDER BY 1 , 2)"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = ':1' group by ps_partkey having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * :2 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = ':1') order by value desc option (maxdop $maxdop)", "output": "SELECT * FROM ( SELECT p_partkey , Count ( *) ocount FROM lineitem , part WHERE l_orderkey NOT IN ( SELECT o_orderkey FROM orders) AND l_partkey = p_partkey AND l_suppkey NOT IN ( SELECT s_suppkey FROM supplier) AND l_discount < 0.5 AND p_size < 41 GROUP BY p_partkey ORDER BY 1, 2) WHERE ROWNUM < 100"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in (':1', ':2') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= ':3' and l_receiptdate < dateadd(mm,1,cast(':3' as datetime)) group by l_shipmode order by l_shipmode option (maxdop $maxdop)", "output": "SELECT * FROM (SELECT o_orderkey, o_custkey, o_orderdate, o_orderstatus, o_totalprice, o_orderpriority FROM orders WHERE o_totalprice < 50005 AND o_orderdate >= To_date ('1995-01-01','YYYY-MM-DD') AND o_orderdate < Add_months(To_date('1995-01-01','YYYY-MM-DD'),12) AND (o_orderkey, Add_months(o_orderdate,- 1)) NOT IN(SELECT CASE WHEN l_orderkey > 5 THEN l_orderkey ELSE NULL END, l_commitdate FROM lineitem WHERE l_extendedprice < 1001 AND l_shipdate >= To_date('1995-01-01','YYYY-MM-DD') AND l_shipdate < Add_months(To_date ('1995-01-01','YYYY-MM-DD'),12)) ORDER BY 1,2,3,4,5) WHERE ROWNUM <= 100"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select c_count, count_big(*) as custdist from ( select c_custkey, count(o_orderkey) as c_count from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%:1%:2%' group by c_custkey) c_orders group by c_count order by custdist desc, c_count desc option (maxdop $maxdop)", "output": "SELECT p_brand , p_type , p_size , Approx_count_distinct (ps_suppkey) AS supplier_cnt FROM partsupp , part WHERE p_partkey = ps_partkey AND p_brand <> 'Brand#15' AND p_type NOT LIKE 'LARGE PLATED%' AND p_size IN ( 21) AND ps_suppkey NOT IN ( SELECT s_suppkey FROM supplier WHERE s_comment LIKE '%Customer%Complaints%') GROUP BY p_brand , p_type , p_size ORDER BY supplier_cnt DESC , p_brand , p_type , p_size"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= ':1' and l_shipdate < dateadd(mm,1,':1') option (maxdop $maxdop)", "output": "select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= date ':1' and l_shipdate < date ':1' + interval '1' month"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "create view revenue$myposition (supplier_no, total_revenue) as select l_suppkey, sum(l_extendedprice * (1 - l_discount)) from lineitem where l_shipdate >= ':1' and l_shipdate < dateadd(mm,3,cast(':1' as datetime)) group by l_suppkey; select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue$myposition where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue$myposition) order by s_suppkey option (maxdop $maxdop); drop view revenue$myposition", "output": "create view revenue$myposition (supplier_no, total_revenue) as select l_suppkey, sum(l_extendedprice * (1 - l_discount)) from lineitem where l_shipdate >= to_date( ':1', 'YYYY-MM-DD') and l_shipdate < add_months( to_date (':1', 'YYYY-MM-DD'), 3) group by l_suppkey; select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue$myposition where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue$myposition) order by s_suppkey; drop view revenue$myposition"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> ':1' and p_type not like ':2%' and p_size in (:3, :4, :5, :6, :7, :8, :9, :10) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%') group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size option (maxdop $maxdop)", "output": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> ':1' and p_type not like ':2%' and p_size in (:3, :4, :5, :6, :7, :8, :9, :10) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%') group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select sum(l_extendedprice) / 7.0 as avg_yearly from lineitem, part where p_partkey = l_partkey and p_brand = ':1' and p_container = ':2' and l_quantity < ( select 0.2 * avg(l_quantity) from lineitem where l_partkey = p_partkey) option (maxdop $maxdop)", "output": "select cast(sum(l_extendedprice) as NUMBER) / 7.0 as avg_yearly from lineitem, part where p_partkey = l_partkey and p_brand = ':1' and p_container = ':2' and l_quantity < ( select 0.2 * avg(l_quantity) from lineitem where l_partkey = p_partkey)"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select top 100 c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > :1) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate option (maxdop $maxdop)", "output": "select * from (select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > :1) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate) where rownum <= 100"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = ':1' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= :4 and l_quantity <= :4 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON') or ( p_partkey = l_partkey and p_brand = ':2' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= :5 and l_quantity <= :5 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON') or ( p_partkey = l_partkey and p_brand = ':3' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= :6 and l_quantity <= :6 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON') option (maxdop $maxdop)", "output": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = ':1' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= :4 and l_quantity <= :4 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON') or ( p_partkey = l_partkey and p_brand = ':2' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= :5 and l_quantity <= :5 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON') or ( p_partkey = l_partkey and p_brand = ':3' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= :6 and l_quantity <= :6 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON')"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select top 100 s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = :1 and p_type like '%:2' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = ':3' and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = ':3') order by s_acctbal desc, n_name, s_name, p_partkey option (maxdop $maxdop)", "output": "alter session force parallel ddl parallel (degree $degree_of_parallel)"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like ':1%') and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= ':2' and l_shipdate < dateadd(yy,1,':2'))) and s_nationkey = n_nationkey and n_name = ':3' order by s_name option (maxdop $maxdop)", "output": "select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like ':1%') and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= date ':2' and l_shipdate < date ':2' + interval '1' year)) and s_nationkey = n_nationkey and n_name = ':3' order by s_name"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select top 100 s_name, count_big(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate) and s_nationkey = n_nationkey and n_name = ':1' group by s_name order by numwait desc, s_name option (maxdop $maxdop)", "output": "select * from (select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate) and s_nationkey = n_nationkey and n_name = ':1' group by s_name order by numwait desc, s_name) where rownum <= 100"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select cntrycode, count_big(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone, 1, 2) as cntrycode, c_acctbal from customer where substring(c_phone, 1, 2) in (':1', ':2', ':3', ':4', ':5', ':6', ':7') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone, 1, 2) in (':1', ':2', ':3', ':4', ':5', ':6', ':7')) and not exists ( select * from orders where o_custkey = c_custkey)) custsale group by cntrycode order by cntrycode option (maxdop $maxdop)", "output": "select cntrycode, cast(count(*) as NUMBER) as numcust, cast(sum(c_acctbal) as NUMBER) as totacctbal from ( select substr(c_phone, 1, 2) as cntrycode, c_acctbal from customer where substr(c_phone, 1, 2) in (':1', ':2', ':3', ':4', ':5', ':6', ':7') and c_acctbal > ( select cast(avg(c_acctbal) as NUMBER) from customer where c_acctbal > 0.00 and substr(c_phone, 1, 2) in (':1', ':2', ':3', ':4', ':5', ':6', ':7')) and not exists ( select * from orders where o_custkey = c_custkey)) custsale group by cntrycode order by cntrycode"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select top 10 l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = ':1' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < ':2' and l_shipdate > ':2' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate option (maxdop $maxdop)", "output": "alter session force parallel query parallel (degree $degree_of_parallel)"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select o_orderpriority, count_big(*) as order_count from orders where o_orderdate >= ':1' and o_orderdate < dateadd(mm,3,cast(':1'as datetime)) and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate) group by o_orderpriority order by o_orderpriority option (maxdop $maxdop)", "output": "SELECT Median (l_discount) FROM orders , customer , lineitem , nation WHERE c_custkey = o_custkey AND o_orderkey = l_orderkey AND c_nationkey = n_nationkey AND n_name = 'GERMANY' AND o_orderdate BETWEEN To_date ( '1995 - 01 - 01' , 'YYYY - MM - DD') AND To_date ( '1995 - 12 - 31' , 'YYYY - MM - DD')"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = ':1' and o_orderdate >= ':2' and o_orderdate < dateadd(yy,1,cast(':2'as datetime)) group by n_name order by revenue desc option (maxdop $maxdop)", "output": "SELECT SUM (l_quantity) AS sum_qty , SUM (l_extendedprice) AS sum_base_price , SUM (l_extendedprice * ( 1 - l_discount)) AS sum_disc_price , SUM (l_extendedprice * ( 1 - l_discount) * ( 1 + l_tax)) AS sum_charge , Avg (l_quantity) AS avg_qty , Avg (l_extendedprice) AS avg_price , Avg (l_discount) AS avg_disc , Count ( *) AS count_order FROM lineitem WHERE l_orderkey IN ( SELECT o_orderkey FROM orders WHERE o_orderdate >= To_date ( '1995 - 01 - 01' , 'YYYY - MM - DD') AND o_orderdate < To_date ( '1995 - 01 - 01' , 'YYYY - MM - DD') + 6 AND o_clerk = 'Clerk#007373565')"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= ':1' and l_shipdate < dateadd(yy,1,cast(':1'as datetime)) and l_discount between :2 - 0.01 and :2 + 0.01 and l_quantity < :3 option (maxdop $maxdop)", "output": "SELECT * FROM ( SELECT c_name , Count ( *) ocount FROM orders , customer WHERE o_custkey = c_custkey AND o_orderstatus = 'F' AND ( EXISTS ( SELECT 1 FROM lineitem , part WHERE l_orderkey = o_orderkey AND l_partkey = p_partkey AND p_size < 5) OR EXISTS ( SELECT 1 FROM lineitem , part WHERE l_orderkey = o_orderkey AND l_partkey = p_partkey AND p_type = 'STANDARD PLATED TIN')) GROUP BY c_name ORDER BY 1 , 2) WHERE ROWNUM <= 100"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, datepart(yy,l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = ':1' and n2.n_name = ':2') or (n1.n_name = ':2' and n2.n_name = ':1')) and l_shipdate between '1995-01-01' and '1996-12-31') shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year option (maxdop $maxdop)", "output": "SELECT * FROM ( SELECT p_partkey , Count ( *) ocount FROM lineitem , supplier , orders , part WHERE l_orderkey = o_orderkey AND l_partkey = p_partkey AND l_suppkey = s_suppkey AND l_discount < 0.02 AND p_size < 41 GROUP BY p_partkey ORDER BY 1 , 2) WHERE ROWNUM <= 100"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select o_year, sum(case when nation = ':1' then volume else 0 end) / sum(volume) as mkt_share from (select datepart(yy,o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = ':2' and s_nationkey = n2.n_nationkey and o_orderdate between '1995-01-01' and '1996-12-31' and p_type = ':3') all_nations group by o_year order by o_year option (maxdop $maxdop)", "output": "SELECT * FROM ( SELECT p_name , p_mfgr , p_brand , p_type , p_size , p_container , p_retailprice , p_comment , qty , qty * p_retailprice FROM ( SELECT l_partkey partkey , SUM (l_quantity) qty FROM lineitem WHERE l_orderkey IN ( SELECT o_orderkey FROM orders WHERE o_orderdate = To_date ( '1996 - 04 - 30' , 'YYYY - MM - DD') AND o_orderpriority = '1 - URGENT' AND o_totalprice > 480000) GROUP BY l_partkey) PartiallyFullfiledOrders , part WHERE p_partkey = PartiallyFullfiledOrders .  partkey ORDER BY qty * p_retailprice) WHERE ROWNUM <= 10"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, datepart(yy,o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like '%:1%') profit group by nation, o_year order by nation, o_year desc option (maxdop $maxdop)", "output": "SELECT l.l_shipdate , l.l_discount , l.l_extendedprice , l.l_quantity , l.l_returnflag , l.l_linestatus , l.l_tax , l.l_commitdate , l.l_receiptdate , l.l_shipmode , l.l_linenumber , l.l_shipinstruct , l.l_comment , s.s_comment , s.s_name , s.s_address , s.s_phone , s.s_acctbal FROM ( SELECT l_orderkey , l_suppkey , SUM (l_quantity) sqty , SUM (ps_availqty) aqty FROM lineitem , partsupp WHERE l_orderkey IN ( SELECT o_orderkey FROM orders WHERE o_orderdate BETWEEN To_date ( '1996 - 04 - 01' , 'YYYY - MM - DD') AND Add_months ( To_date ( '1996 - 04 - 01' , 'YYYY - MM - DD') , 1) AND o_orderpriority = '4 - NOT SPECIFIED' AND o_totalprice < 850) AND l_partkey = ps_partkey GROUP BY l_orderkey , l_suppkey) t , lineitem l , supplier s WHERE t.l_orderkey = l.l_orderkey AND t.l_suppkey = s .  s_suppkey AND sqty < aqty"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "DROP DATABASE $db", "output": "alter session set sort_area_size=5000000"}
{"instruction": "You are an expert database migration specialist. Convert the following T-SQL script to a functionally equivalent PL/SQL script for Oracle 19c.", "input": "EXEC sp_updatestats", "output": "CREATE UNIQUE INDEX CUSTOMER_I1 ON CUSTOMER ( C_W_ID, C_D_ID, C_ID) INITRANS 4 PCTFREE 10"}
